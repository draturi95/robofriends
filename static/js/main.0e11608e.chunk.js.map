{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","index","name","email","id","className","src","CardList","robot","cardComponent","map","user","i","SearchBox","searchChange","type","onChange","placeholder","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filterRobot","filter","eachRobot","toLowerCase","includes","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kPAeeA,EAZF,SAAC,GAA4B,EAA3BC,MAA4B,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAClC,OACC,sBAAKC,UAAU,gDAAf,UACA,qBAAKC,IAAG,+BAA2BF,EAA3B,cACR,gCACA,mCAAMF,EAAN,OACA,kCAAKC,EAAL,cCKaI,EATE,SAAC,GAAY,IAAXC,EAAU,EAAVA,MACZC,EAAgBD,EAAME,KAAK,SAACC,EAAMC,GACvC,OAAO,cAAC,EAAD,CAAeR,GAAII,EAAMI,GAAGR,GAAIF,KAAMM,EAAMI,GAAGV,KAAMC,MAASK,EAAMI,GAAGT,OAA3DS,MAIpB,OAAO,yCAAIH,EAAJ,QCGOI,EAZG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aACnB,OACC,qBAAKT,UAAU,SAAf,SACA,uBAAOA,UAAY,mCACnBU,KAAM,SACNC,SAAWF,EACXG,YAAY,oBCGCC,G,MATA,SAACC,GAEf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAWC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAMK,aCwCKC,E,kDAvCd,aAAc,IAAD,8BACZ,gBAcDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACbxB,MAAQ,GACRqB,YAAa,IAJD,E,qDAOb,WAAoB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAAAC,GACxD,OAAOA,EAASC,UACdF,MAAK,SAAAG,GACP,OAAO,EAAKT,SAAS,CAACpB,MAAQ6B,S,oBAShC,WACC,MAA6BC,KAAKN,MAA3BxB,EAAP,EAAOA,MAAOqB,EAAd,EAAcA,YAERU,EAAc/B,EAAMgC,QAAO,SAAAC,GAChC,OAAOA,EAAUvC,KAAKwC,cAAcC,SAASd,EAAYa,kBAE1D,OAASlC,EAAMoC,OAGf,sBAAKvC,UAAY,KAAjB,UACA,qBAAIA,UAAU,MAAd,UAAoB,mDAApB,OACA,cAAC,EAAD,CAAWS,aAAgBwB,KAAKZ,iBAChC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,MAAO+B,SANhB,+C,GA5BeM,IAAMC,WCIxBC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.0e11608e.chunk.js","sourcesContent":["import React from 'react'; \r\nimport 'tachyons'; \r\n\r\nconst Card = ({index, name, email, id}) =>{\r\n\treturn (\r\n\t\t<div className='tc bg-green dib br3 pa3 ma2 grow bw2 shadow-5'> \r\n\t\t<img src ={`https://robohash.org/${id}?200x200`} />\r\n\t\t<div> \r\n\t\t<h2> {name} </h2> \r\n\t\t<p> {email} </p> \r\n\t\t</div> \r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card; ","import React from 'react'; \r\n\t\r\nimport Card from './Card'; \r\n\r\n\r\nconst CardList = ({robot}) =>{\r\n\tconst cardComponent = robot.map( (user, i) =>{\r\n\t\treturn <Card key= {i} id={robot[i].id} name={robot[i].name} email = {robot[i].email}/>\r\n\t})\r\n\r\n\r\n\treturn(<> {cardComponent} </> );\r\n}\r\n\r\nexport default CardList; ","import React from 'react'; \r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n\treturn (\r\n\t\t<div className='pa2 tc'>\r\n\t\t<input className = 'pa2 tc b--green bg-lightest-blue' \r\n\t\ttype ='search'\r\n\t\tonChange= {searchChange} \r\n\t\tplaceholder=\"Search Robot\"\r\n\t\t/>\r\n\t\t</div> \r\n\t\t); \r\n}\r\n\r\nexport default SearchBox; ","import React from 'react'; \r\n\r\nconst Scroll = (props) =>{\r\n\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll' , border: '1px solid black', height: '800px'}}> \r\n\t\t\t{props.children}\r\n\t\t</div> \r\n\t\t)\r\n}; \t\r\n\r\nexport default Scroll; \r\n","import React from 'react'; \r\nimport CardList from '../components/CardList'; \r\nimport SearchBox from '../components/SearchBox'; \r\nimport './App.css'\r\nimport Scroll from '../components/Scroll.js'\r\n\r\nclass App extends React.Component{\r\n\tconstructor(){ \r\n\t\tsuper(); \r\n\t\tthis.state = {\r\n\t\trobot : [], \r\n\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\").then(response =>{\r\n\t\t\treturn response.json(); \r\n\t\t}).then(users =>{\r\n\t\t\treturn this.setState({robot : users});\r\n\t\t})\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield : event.target.value});\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\tconst {robot, searchfield} = this.state; \r\n\r\n\t\tconst filterRobot = robot.filter(eachRobot =>{\t\r\n\t\t\treturn eachRobot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t}); \r\n\t\treturn (!robot.length) ?\r\n\t\t(<h1> Loading </h1>) : \r\n\t\t(\r\n\t\t<div className = 'tc'>\r\n\t\t<h1 className='f1 '><strong> Robofriends </strong> </h1> \r\n\t\t<SearchBox searchChange = {this.onSearchChange}/>\r\n\t\t<Scroll> \r\n\t\t<CardList robot={filterRobot}/>\r\n\t\t</Scroll>\r\n\t\t</div>); \r\n\t}\r\n}\r\n\r\nexport default App;  \t","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Card from './Card'\n// import {robot} from './robot.js'\nimport App from './containers/App'; \n\n// import App from './App'; // when extension not written, react assumes .js\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \nReactDOM.render(<App /> , document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n   //  <Card {...robot[0]}/>\n  \t// <Card {...robot[1]}/>\n  \t// <Card {...robot[2]}/>\n  \t// <Card {...robot[3]}/>\n  \t// <Card {...robot[4]}/>\n  \t// <Card {...robot[5]}/>\n  \t// <Card {...robot[6]}/>\n  \t// <Card {...robot[7]}/>\n  \n  "],"sourceRoot":""}